git automatic mirroring implementation plan
===========================================

git mirror-list implementation steps
------------------------------------

* mechanism for making 'push objects'

- `git tag --push [ -p prior_tag ] [ --refs=... ]`

* `mirror-list` client
+
- design for storing `auth' information and keys, prompting for
  confirmation of updates
- fetching keys from keyservers

* extensions to `git fetch`
+
- invokes `mirror-list` client
- `fetch` has implicit `refs/pushes/local:refs/pushes/origin` if
   `mirror-list` succeeded
- signature verification, push object ordering on `refs/pushes/origin`
   updating

* git-daemon message
+
- daemon.c changes

* `git mirror-list` server
+
- design for mirror list storage
- design for auth configuration
- automatic signing configuration

* 'git fetch' from mirror
+
- fetch all unknown 'push objects'
- find latest one with correct signature
- initiate fetch of _real_ wanted objects
- `git mirror-check` based on this, updates mirror list

* `git mirror-add` convenience script
+
- uses `git mirror-check`


git mirror-notify implementation steps
--------------------------------------

* calls `git mirror-add`


git mirror-sync implementation steps
------------------------------------

* pre-requisites
+
- check `mirror-list` state contains enough to know what a peer needs
  to do
- functions for sorting 'push objects' may need revising

* `git mirror-sync` event-driven program
+
- design local-repository-mediated `IPC' layout for state of mirror-sync operation

* download spreading stuff
+
- functions for generating bundle manifests from 'push objects' (the
  'CommitReel object list' from GTP)
- storing bundle manifest indexes (the 'CommitReel index' from GTP)
- functions for generating fragment boundaries from 'push objects' and
  block size
- add fragments messages to `git mirror-sync` event driven program

* hook into `git fetch`
- glue option: `git fetch --g2g`

